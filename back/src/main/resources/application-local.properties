# ===============================================
# local
# ===============================================

# ===============================================
# MySQL
# ===============================================
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${DB_HOST_LOCAL}:${DB_PORT_LOCAL}/${DB_NAME_LOCAL}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&useUnicode=true
spring.datasource.username=${DB_USERNAME_LOCAL}
spring.datasource.password=${DB_PASSWORD_LOCAL}

# HikariCP
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.initialization-fail-timeout=10000

# ===============================================
# JPA
# ===============================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# ===============================================
# Data Initialization
# ===============================================
spring.sql.init.mode=always
spring.sql.init.continue-on-error=true
spring.jpa.defer-datasource-initialization=true

# ===============================================
# Redis
# ===============================================
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.session.timeout=3600
spring.session.redis.namespace=orakgaraki:session:local
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false

# ===============================================
# logging
# ===============================================
logging.config=classpath:log4j2-local.xml
logging.level.com.zaxxer.hikari=DEBUG
logging.level.org.springframework.jdbc.datasource=DEBUG
logging.level.javax.sql.DataSource=DEBUG

# ===============================================
# OAuth2
# ===============================================
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}

# ===============================================
#
# ===============================================
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# ===============================================
# EventBridge Webhook
# ===============================================
orak.eventbridge.webhook.token=${ORAK_EVENTBRIDGE_WEBHOOK_TOKEN}

# ===============================================
# Actuator & Monitoring (로컬 테스트용 - 모든 엔드포인트 노출)
# ===============================================
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator
management.server.port=8091

# 메트릭 설정 (상세 모니터링)
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.tags.application=orakgaraki
management.metrics.tags.environment=local
management.metrics.enable.all=true

# Actuator Basic Auth (로컬 테스트용)
actuator.user=${ACTUATOR_USER:ysk}
actuator.password=${ACTUATOR_PASSWORD:yskgood}
actuator.role-name=${ACTUATOR_ROLE_NAME:ACTUATOR}

# ===============================================
# Swagger (로컬 개발용 활성화)
# ===============================================
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.doc-expansion=list
springdoc.swagger-ui.default-models-expand-depth=3


