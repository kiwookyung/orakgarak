# ===============================================
# 애플리케이션 기본 설정 (공통)
# ===============================================
spring.application.name=OrakgarakiApplication
server.port=8080
server.servlet.context-path=/api

# ===============================================
# 커넥션 풀 설정 (HikariCP 공통)
# ===============================================
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.initialization-fail-timeout=60000
spring.datasource.hikari.validation-timeout=5000

# ===============================================
# JPA 설정 (공통)
# ===============================================
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# ===============================================
# JWT 설정 (공통)
# ===============================================
jwt.secret=${JWT_SECRET:orakgaraki-super-secret-key-for-jwt-tokens}
jwt.expiration=${JWT_EXPIRATION:86400000}
jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# ===============================================
# OAuth2 설정 (Google 공통)
# ===============================================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=profile,email

# ===============================================
# AWS S3 설정 (공통)
# ===============================================
spring.cloud.aws.credentials.access-key=${AWS_ACCESS_KEY:your-access-key}
spring.cloud.aws.credentials.secret-key=${AWS_SECRET_KEY:your-secret-key}
spring.cloud.aws.region.static=${AWS_REGION:ap-northeast-2}
spring.cloud.aws.s3.bucket=${AWS_S3_BUCKET:orakgaraki-bucket}

# ===============================================
# 파일 업로드 설정 (공통)
# ===============================================
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=0
s3.upload.path=${ORAK_UPLOAD_PATH:${java.io.tmpdir}/orak-upload}
spring.servlet.multipart.location=${s3.upload.path}

# ===============================================
# 로깅 설정 (공통 기본값 - 각 프로파일에서 오버라이드)
# ===============================================
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.com.ssafy.lab.orak=INFO

# ===============================================
# Swagger / OpenAPI 설정 (공통)
# ===============================================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.doc-expansion=none

# ===============================================
# CORS 설정 (기본값, 환경별로 오버라이드)
# ===============================================
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# ===============================================
# Jackson JSON 설정 (공통)
# ===============================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Seoul
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# ===============================================
# 활성 프로파일 (기본값)
# ===============================================
spring.profiles.active=${SPRING_PROFILES_ACTIVE:local}

# ===============================================
# 액추에이터 설정 (기본값)
# ===============================================
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.info.env.enabled=true

# ===============================================
# 에러 메시지 노출 설정 (공통)
# ===============================================
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false
