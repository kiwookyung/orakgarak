server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:${LOKI_PORT}/loki/api/v1/push

scrape_configs:
  # Docker 컨테이너 로그만 수집 (현업 방식)
  - job_name: containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: name
            values: ["orakgaraki-*"]  # orakgaraki 관련 컨테이너만

    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.+)'
        target_label: 'container_name'
        replacement: '$1'

      - source_labels: ['__meta_docker_container_id']
        regex: '(.+)'
        target_label: '__path__'
        replacement: '/var/lib/docker/containers/$1/*.log'

    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            time: time

      - timestamp:
          source: time
          format: RFC3339Nano

      - output:
          source: output

      - labels:
          stream:

  # 애플리케이션 로그 (환경별 Docker Volume 마운트로 통일)
  - job_name: app-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: orakgaraki
          service: app
          environment: ${SPRING_PROFILES_ACTIVE}
          __path__: /var/log/app/*.log  # Docker에서 통일된 경로

    pipeline_stages:
      # 파일명을 라벨로 추가
      - regex:
          expression: '^.*/(?P<filename>[^/]+)$'
          source: filename
      - labels:
          filename:

# 현업에서는 환경별 다른 제한 설정
limits_config:
  readline_rate: ${PROMTAIL_READLINE_RATE}
  max_streams: ${PROMTAIL_MAX_STREAMS}