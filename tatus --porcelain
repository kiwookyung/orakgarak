[1mdiff --git a/front/src/pages/MyPage.tsx b/front/src/pages/MyPage.tsx[m
[1mindex 4ca64e2..c78e498 100644[m
[1m--- a/front/src/pages/MyPage.tsx[m
[1m+++ b/front/src/pages/MyPage.tsx[m
[36m@@ -25,6 +25,7 @@[m [mimport {[m
   TextField,[m
   InputAdornment[m
 } from '@mui/material';[m
[32m+[m[32mimport { theme } from '../styles/theme';[m
 import { [m
   Add, [m
   Album, [m
[36m@@ -34,16 +35,15 @@[m [mimport {[m
   PlayArrow,[m
   Edit,[m
   Search,[m
[31m-  MoreVert,[m
   Person,[m
   CalendarToday,[m
   Star,[m
[31m-  LocalFireDepartment,[m
[31m-  TrendingUp,[m
[31m-  Favorite as HeartIcon[m
[32m+[m[32m  Delete[m
 } from '@mui/icons-material';[m
 import { useNavigate } from 'react-router-dom';[m
 import { useUIStore } from '../stores/uiStore';[m
[32m+[m[32mimport { motion } from 'framer-motion';[m
[32m+[m[32mimport AlbumCoverflow from '../components/AlbumCoverflow';[m
 [m
 interface TabPanelProps {[m
   children?: React.ReactNode;[m
[36m@@ -115,11 +115,24 @@[m [mconst MyPage: React.FC = () => {[m
   });[m
   [m
   // 프로필 상태 관리[m
[31m-  const [profileData, setProfileData] = useState({[m
[31m-    nickname: '음악러버',[m
[31m-    introduction: '음악을 사랑하는 평범한 사람입니다. 노래 부르는 것이 취미예요!',[m
[31m-    profileImage: null as File | null,[m
[31m-    profileImageUrl: ''[m
[32m+[m[32m  const [profileData, setProfileData] = useState(() => {[m
[32m+[m[32m    // localStorage에서 프로필 데이터 불러오기[m
[32m+[m[32m    const savedProfile = localStorage.getItem('userProfile');[m
[32m+[m[32m    if (savedProfile) {[m
[32m+[m[32m      const parsed = JSON.parse(savedProfile);[m
[32m+[m[32m      return {[m
[32m+[m[32m        nickname: parsed.nickname || '음악러버',[m
[32m+[m[32m        introduction: parsed.introduction || '음악을 사랑하는 평범한 사람입니다. 노래 부르는 것이 취미예요!',[m
[32m+[m[32m        profileImage: null as File | null,[m
[32m+[m[32m        profileImageUrl: parsed.profileImageUrl || ''[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m[32m    return {[m
[32m+[m[32m      nickname: '음악러버',[m
[32m+[m[32m      introduction: '음악을 사랑하는 평범한 사람입니다. 노래 부르는 것이 취미예요!',[m
[32m+[m[32m      profileImage: null as File | null,[m
[32m+[m[32m      profileImageUrl: ''[m
[32m+[m[32m    };[m
   });[m
   [m
   // 편집 폼 상태[m
[36m@@ -135,26 +148,6 @@[m [mconst MyPage: React.FC = () => {[m
     { title: '밤편지', artist: '아이유', score: 88, quality: '보통', duration: '3:23', date: '1월 13일' }[m
   ]);[m
 [m
[31m-  // const [albums, setAlbums] = useState([[m
[31m-  //   { [m
[31m-  //     title: 'My Favorite Songs', [m
[31m-  //     status: '공개', [m
[31m-  //     songs: 3, [m
[31m-  //     likes: 42, [m
[31m-  //     plays: 156, [m
[31m-  //     date: '1월 15일',[m
[31m-  //     cover: '/api/placeholder/200/200'[m
[31m-  //   },[m
[31m-  //   { [m
[31m-  //     title: 'Rainy Day Mood', [m
[31m-  //     status: '비공개', [m
[31m-  //     songs: 5, [m
[31m-  //     likes: 0, [m
[31m-  //     plays: 23, [m
[31m-  //     date: '1월 10일',[m
[31m-  //     cover: '/api/placeholder/200/200'[m
[31m-  //   }[m
[31m-  // ]);[m
 [m
   // 실제 사용자 통계 데이터 (나중에 API에서 가져올 예정)[m
   const [userStats, setUserStats] = useState({[m
[36m@@ -183,20 +176,11 @@[m [mconst MyPage: React.FC = () => {[m
     });[m
   }, [myAlbums, recordings]);[m
 [m
[31m-  const achievements = [[m
[31m-    { icon: <MusicNote />, text: '첫 앨범', color: '#1976d2' },[m
[31m-    { icon: <LocalFireDepartment />, text: '인기 앨범', color: '#ff6b6b' },[m
[31m-    { icon: <TrendingUp />, text: '보컬리스트', color: '#4caf50' },[m
[31m-    { icon: <HeartIcon />, text: '소셜 스타', color: '#ff9800' }[m
[31m-  ];[m
 [m
   const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {[m
     setTabValue(newValue);[m
   };[m
 [m
[31m-  // const handleCreateAlbum = () => {[m
[31m-  //   navigate('/albums/create');[m
[31m-  // };[m
 [m
   const handleNewRecording = () => {[m
     navigate('/record');[m
[36m@@ -239,11 +223,29 @@[m [mconst MyPage: React.FC = () => {[m
 [m
       const reader = new FileReader();[m
       reader.onload = (e) => {[m
[31m-        setProfileData(prev => ({[m
[31m-          ...prev,[m
[32m+[m[32m        const updatedProfileData = {[m
[32m+[m[32m          ...profileData,[m
           profileImage: file,[m
           profileImageUrl: e.target?.result as string[m
[32m+[m[32m        };[m
[32m+[m[41m        [m
[32m+[m[32m        setProfileData(updatedProfileData);[m
[32m+[m[41m        [m
[32m+[m[32m        // localStorage에 프로필 데이터 저장[m
[32m+[m[32m        localStorage.setItem('userProfile', JSON.stringify({[m
[32m+[m[32m          nickname: profileData.nickname,[m
[32m+[m[32m          introduction: profileData.introduction,[m
[32m+[m[32m          profileImageUrl: e.target?.result as string[m
         }));[m
[32m+[m[41m        [m
[32m+[m[32m        // 헤더 업데이트를 위한 커스텀 이벤트 발생[m
[32m+[m[32m        window.dispatchEvent(new CustomEvent('profileUpdated', {[m
[32m+[m[32m          detail: {[m
[32m+[m[32m            nickname: profileData.nickname,[m
[32m+[m[32m            profileImageUrl: e.target?.result as string[m
[32m+[m[32m          }[m
[32m+[m[32m        }));[m
[32m+[m[41m        [m
         showToast('프로필 사진이 업로드되었습니다.', 'success');[m
       };[m
       reader.readAsDataURL(file);[m
[36m@@ -252,41 +254,66 @@[m [mconst MyPage: React.FC = () => {[m
 [m
   const handleSaveProfile = () => {[m
     // 실제로는 여기서 API 호출하여 서버에 저장[m
[31m-    setProfileData(prev => ({[m
[31m-      ...prev,[m
[32m+[m[32m    const updatedProfileData = {[m
[32m+[m[32m      ...profileData,[m
       nickname: editForm.nickname,[m
       introduction: editForm.introduction[m
[32m+[m[32m    };[m
[32m+[m[41m    [m
[32m+[m[32m    setProfileData(updatedProfileData);[m
[32m+[m[41m    [m
[32m+[m[32m    // localStorage에 프로필 데이터 저장[m
[32m+[m[32m    localStorage.setItem('userProfile', JSON.stringify({[m
[32m+[m[32m      nickname: editForm.nickname,[m
[32m+[m[32m      introduction: editForm.introduction,[m
[32m+[m[32m      profileImageUrl: profileData.profileImageUrl[m
     }));[m
[32m+[m[41m    [m
[32m+[m[32m    // 헤더 업데이트를 위한 커스텀 이벤트 발생[m
[32m+[m[32m    window.dispatchEvent(new CustomEvent('profileUpdated', {[m
[32m+[m[32m      detail: {[m
[32m+[m[32m        nickname: editForm.nickname,[m
[32m+[m[32m        profileImageUrl: profileData.profileImageUrl[m
[32m+[m[32m      }[m
[32m+[m[32m    }));[m
[32m+[m[41m    [m
     setProfileEditOpen(false);[m
     showToast('프로필이 성공적으로 저장되었습니다.', 'success');[m
   };[m
 [m
   const handleResetProfileImage = () => {[m
[31m-    setProfileData(prev => ({[m
[31m-      ...prev,[m
[32m+[m[32m    const updatedProfileData = {[m
[32m+[m[32m      ...profileData,[m
       profileImage: null,[m
       profileImageUrl: ''[m
[32m+[m[32m    };[m
[32m+[m[41m    [m
[32m+[m[32m    setProfileData(updatedProfileData);[m
[32m+[m[41m    [m
[32m+[m[32m    // localStorage에 프로필 데이터 저장[m
[32m+[m[32m    localStorage.setItem('userProfile', JSON.stringify({[m
[32m+[m[32m      nickname: profileData.nickname,[m
[32m+[m[32m      introduction: profileData.introduction,[m
[32m+[m[32m      profileImageUrl: ''[m
[32m+[m[32m    }));[m
[32m+[m[41m    [m
[32m+[m[32m    // 헤더 업데이트를 위한 커스텀 이벤트 발생[m
[32m+[m[32m    window.dispatchEvent(new CustomEvent('profileUp